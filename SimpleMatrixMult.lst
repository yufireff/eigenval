ELCORE GAS  SimpleMatrixMult.s 			page 1


   1              	 .global RealMatrixMult
   2              	 .global ComplexMatrixMult
   3              	 .global g_pReal1
   4              	 .global g_pImag1
   5              	 .global g_pReal2
   6              	 .global g_pImag2
   7              	 .global g_pReal3
   8              	 .global g_pImag3
   9              	 .global g_Factor
  10              	 .global g_FactorIm
  11              	 .global g_nRows1
  12              	 .global g_nColumns1
  13              	 .global g_nColumns2
  14              	
  15              	 .text
  16              	
  17              	RealMatrixMult:
  18 0000 00007F00 		move #0, a0.l
  18      00000000 
  19 0002 00E121ED 		move g_nRows1, a0.s
  20 0003 00001300 		move (a0), r0.l; R0 <- nRows1
  21 0004 00E129ED 		move g_nColumns1, a0.s
  22 0005 00041300 		move (a0), r2.l; R2 <- nColumns1 == nRows2
  23 0006 00E131ED 		move g_nColumns2, a0.s
  24 0007 00081300 		move (a0), r4.l; R4 <- nColumns2
  25 0008 00E119ED 		move g_Factor, a0.s
  26 0009 00241300 		move (a0), r18.l; R6 <- Factor
  27 000a 000001ED 		move g_pReal1, a0.s
  28 000b 084B09ED 		move g_pReal2, a1.s
  29 000c 109611ED 		move g_pReal3, a2.s
  30              		; сохраняем исходные значения А0 и А1
  31 000d 001C0500 		move a0, r14.s
  32 000e 00200D00 		move a1, r16.s
  33              		; задаём шаг адреса
  34 000f 00084C00 		move r4.s, i1.s
  35 0010 0029FF00 		move #0, r20.l; счёткик строк
  35      00000000 
  36              		RMMStartRowsLoop:
  37 0012 002DFF00 			move #0, r22.l; счёткик столбцов
  37      00000000 
  38              			RMMStartColumnsLoop:
  39              				; выставляем начальные адреса для цикла
  40 0014 A60478FB 				mpuu r20.s, r2.s, r24.l
  41 0015 76000A04 				add r14.s, r24.s
  42 0016 00300400 				move r24.s, a0
  43 0017 862C7884 				add r16.s, r22.s, r24.s
  44 0018 00300C00 				move r24.s, a1
  45 0019 000DFF00 				move #0, r6.l; зануляем текущую сумму
  45      00000000 
  46 001b 1000218F 				do r2, RMMEndInnerLoop
  47 001c 00104300 					move (a0)+, r8.l; копируем элемент первой матрицы в r8
  48 001d 0014E300 					move (a1)+i1, r10.l; копируем элемент второй матрицы в r10
  49 001e 431478EF 					fmpy r8.l, r10.l, r12.l; произведение
  50              				RMMEndInnerLoop:
  51 001f 61800A0A 					fadd r12.l, r6.l; прибавляем его к сумме
  52              				; кладём результат в матрицу, домножая на factor
  53 0020 91800A6F 				fmpy r18.l, r6.l
ELCORE GAS  SimpleMatrixMult.s 			page 2


  54 0021 000D4200 				move r6.l, (a2)+
  55              				; инкрементим счётчик столбцов, проверяем условие выхода
  56 0022 B5800A22 				incl r22.l, r22.l
  57 0023 B1000A35 				cmpl r22.l, r4.l
  58 0024 2800A19D 				j.ne RMMStartColumnsLoop
  59              			; инкрементим счётчик строк, проверяем условие выхода
  60 0025 A5000A22 			incl r20.l, r20.l
  61 0026 A0000A35 			cmpl r20.l, r0.l
  62 0027 2800919D 			j.ne RMMStartRowsLoop
  63 0028 F80001BE 		stop
  64              	
  65              	
  66              	ComplexMatrixMult:
  67 0029 00007F00 		move #0, a0.l
  67      00000000 
  68 002b 00E121ED 		move g_nRows1, a0.s
  69 002c 00001300 		move (a0), r0.l; nRows1
  70 002d 00E129ED 		move g_nColumns1, a0.s
  71 002e 00041300 		move (a0), r2.l; nColumns1 == nRows2
  72 002f 00E131ED 		move g_nColumns2, a0.s
  73 0030 00081300 		move (a0), r4.l; nColumns2
  74 0031 00E119ED 		move g_Factor, a0.s
  75 0032 00241300 		move (a0), r18.l; Factor
  76 0033 000001ED 		move g_pReal1, a0.s
  77 0034 084B09ED 		move g_pReal2, a1.s
  78 0035 109611ED 		move g_pReal3, a2.s
  79 0036 18E139ED 		move g_pImag1, a3.s
  80 0037 212C41ED 		move g_pImag2, a4.s
  81 0038 297749ED 		move g_pImag3, a5.s
  82              		; сохраняем исходные значения a0 и a1
  83 0039 001C0500 		move a0, r14.s
  84 003a 00200D00 		move a1, r16.s
  85 003b 00341D00 		move a3, r26.s
  86 003c 00382500 		move a4, r28.s
  87              		; задаём шаг адреса
  88 003d 00084C00 		move r4.s, i1.s
  89 003e 00086400 		move r4.s, i4.s
  90 003f 0029FF00 		move #0, r20.l; счёткик строк
  90      00000000 
  91              		CMMStartRowsLoop:
  92 0041 002DFF00 			move #0, r22.l; счёткик столбцов
  92      00000000 
  93              			CMMStartColumnsLoop:
  94              				; выставляем начальные адреса для цикла
  95              				; re A
  96 0043 A60478FB 				mpuu r20.s, r2.s, r24.l; отступ в первой матрице = количество столбцов * счётчик строк
  97 0044 77B07884 				add r14.s, r24.s, r30.s; прибавляем его к сохранённому в r14 значению a0
  98 0045 003C0400 				move r30.s, a0; выставлям а0
  99              				; im A
 100 0046 D7800A04 				add r26.s, r30.s; прибавляем отступ к сохранённому в r26 значению а3
 101 0047 003C1C00 				move r30.s, a3; выставляем а3
 102              				; re B
 103 0048 862C7884 				add r16.s, r22.s, r24.s; отступ во второй матрице = счётчик столбцов. прибавляем его к сохранённ
 104 0049 00300C00 				move r24.s, a1
 105              				; im B
 106 004a E62C7884 				add r28.s, r22.s, r24.s; аналогично
 107 004b 00302400 				move r24.s, a4
ELCORE GAS  SimpleMatrixMult.s 			page 3


 108              				; зануляем текущую сумму
 109 004c 000DFF00 				move #0, r6.l
 109      00000000 
 110 004e 000FFF00 				move #0, r7.l
 110      00000000 
 111 0050 1000618F 				do r2, CMMEndInnerLoop
 112 0051 00104300 					move (a0)+, r8.l; копируем элемент re первой матрицы в r8
 113 0052 0014E300 					move (a1)+i1, r10.l; копируем элемент re второй матрицы в r10
 114 0053 0031C300 					move (a3)+, r24.l; копируем элемент im первой матрицы в r24
 115 0054 003E6300 					move (a4)+i4, r30.l; копируем элемент im второй матрицы в r30
 116              					; re = re1*re2 - im1*im2
 117 0055 431478EF 					fmpy r8.l, r10.l, r12.l
 118 0056 61800A0A 					fadd r12.l, r6.l
 119 0057 C33C78EF 					fmpy r24.l, r30.l, r12.l
 120 0058 61800A2D 					fsub r12.l, r6.l
 121              					; im = re1*im2 + re2*im1
 122 0059 47800A6F 					fmpy r8.l, r30.l, r30.l
 123 005a F1C00A0A 					fadd r30.l, r7.l
 124 005b 56000A6F 					fmpy r10.l, r24.l, r24.l
 125              				CMMEndInnerLoop:
 126 005c C1C00A0A 					fadd r24.l, r7.l
 127              				; кладём результат в матрицу, домножая на factor
 128 005d 91800A6F 				fmpy r18.l, r6.l
 129 005e 000D4200 				move r6.l, (a2)+
 130 005f 918E78EF 				fmpy r18.l, r7.l, r6.l
 131 0060 000EC200 				move r6.l, (a5)+
 132              				; инкрементим счётчик столбцов, проверяем условие выхода
 133 0061 B5800A22 				incl r22.l, r22.l
 134 0062 B1000A35 				cmpl r22.l, r4.l
 135 0063 2802199D 				j.ne CMMStartColumnsLoop
 136              			; инкрементим счётчик строк, проверяем условие выхода
 137 0064 A5000A22 			incl r20.l, r20.l
 138 0065 A0000A35 			cmpl r20.l, r0.l
 139 0066 2802099D 			j.ne CMMStartRowsLoop
 140 0067 F80001BE 		stop
 141              	
 142              	 .data
 143 0000 00000000 	 g_pReal1: .space 9604, 0
 143      00000000 
 143      00000000 
 143      00000000 
 143      00000000 
 144 0961 00000000 	 g_pReal2: .space 9604, 0
 144      00000000 
 144      00000000 
 144      00000000 
 144      00000000 
 145 12c2 00000000 	 g_pReal3: .space 9604, 0
 145      00000000 
 145      00000000 
 145      00000000 
 145      00000000 
 146 1c23 00000000 	 g_Factor: .real 0
 147 1c24 00000000 	 g_nRows1: .word 0
 148 1c25 00000000 	 g_nColumns1: .word 0
 149 1c26 00000000 	 g_nColumns2: .word 0
 150 1c27 00000000 	 g_pImag1: .space 9604, 0
ELCORE GAS  SimpleMatrixMult.s 			page 4


 150      00000000 
 150      00000000 
 150      00000000 
 150      00000000 
 151 2588 00000000 	 g_pImag2: .space 9604, 0
 151      00000000 
 151      00000000 
 151      00000000 
 151      00000000 
 152 2ee9 00000000 	 g_pImag3: .space 9604, 0
 152      00000000 
 152      00000000 
 152      00000000 
 152      00000000 
 153 384a 00000000 	 g_FactorIm: .real 0
